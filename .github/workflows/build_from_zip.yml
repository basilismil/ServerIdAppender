name: Build APK from ZIP

on:
  workflow_dispatch:
  push:
    paths:
      - "ServerIdAppender_GitHubReady.zip"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip wget

      - name: Unzip project
        run: |
          unzip -o "ServerIdAppender_GitHubReady.zip" -d .
          echo "== Workspace tree ==" && find . -maxdepth 3 -type d -print

      - name: Detect project dir (contains settings.gradle.kts)
        id: detect
        run: |
          set -e
          DIR=$(find . -maxdepth 4 -type f -name "settings.gradle.kts" -printf '%h\n' | head -n1)
          if [ -z "$DIR" ]; then
            echo "❌ Δεν βρέθηκε settings.gradle.kts"; exit 1
          fi
          echo "project_dir=$DIR" >> $GITHUB_OUTPUT
          echo "✅ Project dir: $DIR" && ls -la "$DIR"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept licenses
        run: yes | sdkmanager --licenses

      - name: Install SDK components
        run: sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      # Δημιουργούμε local.properties ώστε το AGP να βρίσκει το SDK
      - name: Create local.properties
        run: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "${{ steps.detect.outputs.project_dir }}/local.properties"
          cat "${{ steps.detect.outputs.project_dir }}/local.properties"

      # Χρησιμοποιούμε standalone Gradle (όχι wrapper από το ZIP)
      - name: Download Gradle 8.7
        run: |
          wget -q https://services.gradle.org/distributions/gradle-8.7-bin.zip -O /tmp/gradle.zip
          unzip -q /tmp/gradle.zip -d $HOME
          echo "$HOME/gradle-8.7/bin" >> $GITHUB_PATH

      - name: Gradle cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Build debug APK
        env:
          GRADLE_USER_HOME: ${{ github.workspace }}/.gradle
        run: |
          set -e
          cd "${{ steps.detect.outputs.project_dir }}"
          gradle --version
          gradle --no-daemon assembleDebug
          echo "== Outputs ==" && find app/build/outputs -type f -maxdepth 5 -print || true

      # Πιάνουμε ΟΠΟΙΟ apk φτιαχτεί
      - name: Upload APKs
        uses: actions/upload-artifact@v4
        with:
          name: apk-outputs
          path: |
            ${{ steps.detect.outputs.project_dir }}/app/build/outputs/apk/**/*.apk
            ${{ steps.detect.outputs.project_dir }}/app/build/outputs/**/*.apk
