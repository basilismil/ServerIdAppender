name: Build APK from ZIP

on:
  workflow_dispatch:
  push:
    paths:
      - "ServerIdAppender_GitHubReady.zip"
      - "ServerIdAppender_GH/**"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install unzip
        run: sudo apt-get update && sudo apt-get install -y unzip

      - name: Unzip project
        run: |
          # Αποσυμπίεση στο $GITHUB_WORKSPACE
          unzip -o "ServerIdAppender_GitHubReady.zip" -d .
          echo "PWD after unzip:" && pwd && ls -la

      - name: Detect project dir (has settings.gradle.kts)
        id: detect
        run: |
          set -e
          DIR=$(find . -maxdepth 3 -type f -name "settings.gradle.kts" -printf '%h\n' | head -n1)
          if [ -z "$DIR" ]; then
            echo "❌ Δεν βρέθηκε settings.gradle.kts"
            exit 1
          fi
          echo "Project dir: $DIR"
          echo "project_dir=$DIR" >> $GITHUB_OUTPUT
          ls -la "$DIR"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept licenses
        run: yes | sdkmanager --licenses

      - name: Install SDK components
        run: sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      # 💡 Καλούμε απευθείας το Gradle Wrapper Main από το jar (δεν χρειαζόμαστε ./gradlew)
      - name: Build debug APK
        working-directory: ${{ steps.detect.outputs.project_dir }}
        run: |
          ls -la gradle/wrapper || true
          java -Xmx1g -cp gradle/wrapper/gradle-wrapper.jar org.gradle.wrapper.GradleWrapperMain --no-daemon assembleDebug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: ${{ steps.detect.outputs.project_dir }}/app/build/outputs/apk/debug/app-debug.apk
